name: SonarQube to GitHub Issues Sync

on:
  # Run after SonarCloud analysis completes
  workflow_run:
    workflows: ["SonarCloud Analysis"]
    types: [completed]
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run daily to catch any missed issues
  schedule:
    - cron: '0 9 * * *'  # 9 AM UTC daily

jobs:
  sync-sonarqube-issues:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        # Install axios if not in package.json
        npm list axios || npm install axios
    
    - name: Sync SonarQube Issues to GitHub
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_OWNER: beslagicadin
        GITHUB_REPO: polyglot-dev-toolkit
        SONAR_PROJECT_KEY: beslagicadin_polyglot-dev-toolkit
      run: |
        node scripts/create-github-issues.js
    
    - name: Comment on PR if triggered by workflow_run
      if: github.event_name == 'workflow_run' && github.event.workflow_run.pull_requests[0]
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.workflow_run.pull_requests[0].number;
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: 'üîç **SonarQube Issues Sync Completed**\n\nAny new SonarQube issues have been automatically created as GitHub issues with the `sonarqube` label.'
          });
